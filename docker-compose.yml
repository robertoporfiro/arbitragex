services:
  # ArbitrageX Bot Principal
  arbitragex:
    image: arbitragex-bot:v3.5
    build:
      context: .
      dockerfile: Dockerfile
    container_name: arbitragex-bot
    restart: unless-stopped
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - INITIAL_BALANCE=1000
      - MIN_PROFIT_PERCENT=0.05
      - MAX_TRADE_AMOUNT=100
      - TRADING_SYMBOLS=SOL/USDT,XRP/USDT,SHIB/USDT
    volumes:
      - ./logs:/app/logs
    ports:
      - "8000:8000"  # Metrics endpoint
    networks:
      - arbitragex-network
    depends_on:
      - postgres
      - redis
    command: ["tail", "-f", "/dev/null"]

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: arbitragex-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: arbitrage_db
      POSTGRES_USER: arbitrage_user
      POSTGRES_PASSWORD: arbitrage_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - arbitragex-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: arbitragex-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - arbitragex-network

  # Prometheus (Opcional - Monitoramento)
  prometheus:
    image: prom/prometheus:latest
    container_name: arbitragex-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - arbitragex-network
    profiles:
      - monitoring

  # Grafana (Sem plugins externos)
  grafana:
    image: grafana/grafana:latest
    container_name: arbitragex-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      # Removido GF_INSTALL_PLUGINS para evitar erros de download
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    user: "472:472"  # Grafana user
    networks:
      - arbitragex-network
    profiles:
      - monitoring
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  arbitragex-network:
    driver: bridge
